hawaii:
  async:
    enabled: false
  crypto:
    enabled: false
  logging:
    filters:
      transaction-type:
        enabled: true
      container-name:
        enabled: false
      oidc:
        enabled: false
      software-version:
        enabled: false
      client-ip-log:
        enabled: false

logging:
  #level: ai.timefold.solver=DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} %clr(${LOG_LEVEL_PATTERN:%5p}) %blue([%-15.15t]) - %logger{36} - %msg%n"

management:
  # Enable `/actuator/health/readiness` and `/actuator/health/liveness` endpoints
  endpoint:
    env:
      show-values: always
      enabled: false
    health:
      probes:
        enabled: true
  endpoints:
    web:
      exposure:
        include: env,health,prometheus
server:
  port: 8200

spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/timetable
    username: timetable
    password: timetable

  jpa:
    hibernate:
      # dialect: org.hibernate.dialect.PostgreSQLDialect
      # Hibernate ddl auto (create, create-drop, validate, update)
      ddl-auto: create

      jdbc:
        lob:
          non_contextual_creation: true
    show-sql: true

timefold:
  # benchmark:
  #   solver-benchmark-config-xml=to be defined + timespent
  solver:
    solver-config-xml: timetableSolverConfig.xml
    termination:
      spent-limit: ${TIMEFOLD_LIMIT:PT10h}

    # best-score-limit: 0hard/*soft
    # environment-mode: FULL_ASSERT
#
#  solver-manager:
#    parallel-solver-count: 4

timetable:
  create-test-data:
    dutch: false
  secret-key: 8LG3uOaRrvCbgIvwoKOF8KCLlem9jfCXjoDwn4S54YWP8KClmfCdqZLko4fikr3wq7a15Za58KCJuuWvivCnqJfwp6ao8Kasq/CsubfwnZew8KuZgOGYlA==
